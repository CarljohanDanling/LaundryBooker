// <auto-generated />
using System;
using LaundryBooker.DataLayer.Database.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LaundryBooker.DataLayer.Migrations
{
    [DbContext(typeof(LaundryContext))]
    partial class LaundryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LaundryBooker.DataLayer.Database.DatabaseModels.Apartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApartmentNumber")
                        .HasColumnType("int");

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("Apartments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApartmentNumber = 14,
                            BuildingId = 1
                        },
                        new
                        {
                            Id = 2,
                            ApartmentNumber = 3,
                            BuildingId = 1
                        });
                });

            modelBuilder.Entity("LaundryBooker.DataLayer.Database.DatabaseModels.BookingSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("EndTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("LaundryRoomId")
                        .HasColumnType("int");

                    b.Property<string>("SessionStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LaundryRoomId");

                    b.HasIndex("TenantId");

                    b.ToTable("BookingSessions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0306d7f7-b0ca-4937-950a-6f73e278792b"),
                            EndTime = new DateTimeOffset(new DateTime(2020, 6, 14, 21, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0)),
                            LaundryRoomId = 23,
                            SessionStatus = "Finished",
                            StartTime = new DateTimeOffset(new DateTime(2020, 6, 14, 14, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0)),
                            TenantId = 1
                        },
                        new
                        {
                            Id = new Guid("09dd120c-286b-4891-a8df-7cd616dd65cb"),
                            EndTime = new DateTimeOffset(new DateTime(2020, 6, 19, 21, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0)),
                            LaundryRoomId = 23,
                            SessionStatus = "Scheduled",
                            StartTime = new DateTimeOffset(new DateTime(2020, 6, 19, 14, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0)),
                            TenantId = 1
                        },
                        new
                        {
                            Id = new Guid("23e00cbf-7a2e-43ee-8a7a-6b21eb4513d4"),
                            EndTime = new DateTimeOffset(new DateTime(2020, 7, 5, 21, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0)),
                            LaundryRoomId = 23,
                            SessionStatus = "Scheduled",
                            StartTime = new DateTimeOffset(new DateTime(2020, 7, 5, 14, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 2, 0, 0, 0)),
                            TenantId = 2
                        });
                });

            modelBuilder.Entity("LaundryBooker.DataLayer.Database.DatabaseModels.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<string>("HousePrefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Buildings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HouseNumber = 48,
                            HousePrefix = "B",
                            StreetAddress = "Helenius Gata"
                        });
                });

            modelBuilder.Entity("LaundryBooker.DataLayer.Database.DatabaseModels.LaundryRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.Property<string>("RoomStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId")
                        .IsUnique();

                    b.ToTable("LaundryRooms");

                    b.HasData(
                        new
                        {
                            Id = 23,
                            BuildingId = 1,
                            RoomStatus = "Free"
                        });
                });

            modelBuilder.Entity("LaundryBooker.DataLayer.Database.DatabaseModels.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId")
                        .IsUnique();

                    b.ToTable("Tenants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApartmentId = 1,
                            Name = "Calle"
                        },
                        new
                        {
                            Id = 2,
                            ApartmentId = 2,
                            Name = "Erik"
                        });
                });

            modelBuilder.Entity("LaundryBooker.DataLayer.Database.DatabaseModels.Apartment", b =>
                {
                    b.HasOne("LaundryBooker.DataLayer.Database.DatabaseModels.Building", "Building")
                        .WithMany("Apartments")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LaundryBooker.DataLayer.Database.DatabaseModels.BookingSession", b =>
                {
                    b.HasOne("LaundryBooker.DataLayer.Database.DatabaseModels.LaundryRoom", "LaundryRoom")
                        .WithMany("BookingSessions")
                        .HasForeignKey("LaundryRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaundryBooker.DataLayer.Database.DatabaseModels.Tenant", "Tenant")
                        .WithMany("BookingSessions")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("LaundryBooker.DataLayer.Database.DatabaseModels.LaundryRoom", b =>
                {
                    b.HasOne("LaundryBooker.DataLayer.Database.DatabaseModels.Building", "Building")
                        .WithOne("LaundryRoom")
                        .HasForeignKey("LaundryBooker.DataLayer.Database.DatabaseModels.LaundryRoom", "BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LaundryBooker.DataLayer.Database.DatabaseModels.Tenant", b =>
                {
                    b.HasOne("LaundryBooker.DataLayer.Database.DatabaseModels.Apartment", "Apartment")
                        .WithOne("Tenant")
                        .HasForeignKey("LaundryBooker.DataLayer.Database.DatabaseModels.Tenant", "ApartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
