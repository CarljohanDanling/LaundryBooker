// <auto-generated />
using System;
using LaundryBooker.Api.Database.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LaundryBooker.Api.Migrations
{
    [DbContext(typeof(LaundryContext))]
    partial class LaundryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LaundryBooker.Api.Database.DatabaseModels.Apartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApartmentNumber")
                        .HasColumnType("int");

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("LaundryBooker.Api.Database.DatabaseModels.BookingSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset>("EndTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("LaundryRoomId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("LaundryRoomId");

                    b.ToTable("BookingSessions");
                });

            modelBuilder.Entity("LaundryBooker.Api.Database.DatabaseModels.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<string>("HousePrefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("LaundryBooker.Api.Database.DatabaseModels.LaundryRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId")
                        .IsUnique();

                    b.ToTable("LaundryRooms");
                });

            modelBuilder.Entity("LaundryBooker.Api.Database.DatabaseModels.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("BookingSessionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId")
                        .IsUnique();

                    b.HasIndex("BookingSessionId")
                        .IsUnique()
                        .HasFilter("[BookingSessionId] IS NOT NULL");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("LaundryBooker.Api.Database.DatabaseModels.Apartment", b =>
                {
                    b.HasOne("LaundryBooker.Api.Database.DatabaseModels.Building", "Building")
                        .WithMany("Apartments")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LaundryBooker.Api.Database.DatabaseModels.BookingSession", b =>
                {
                    b.HasOne("LaundryBooker.Api.Database.DatabaseModels.LaundryRoom", "LaundryRoom")
                        .WithMany("BookingSessions")
                        .HasForeignKey("LaundryRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LaundryBooker.Api.Database.DatabaseModels.LaundryRoom", b =>
                {
                    b.HasOne("LaundryBooker.Api.Database.DatabaseModels.Building", "Building")
                        .WithOne("LaundryRoom")
                        .HasForeignKey("LaundryBooker.Api.Database.DatabaseModels.LaundryRoom", "BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LaundryBooker.Api.Database.DatabaseModels.Tenant", b =>
                {
                    b.HasOne("LaundryBooker.Api.Database.DatabaseModels.Apartment", "Apartment")
                        .WithOne("Tenant")
                        .HasForeignKey("LaundryBooker.Api.Database.DatabaseModels.Tenant", "ApartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaundryBooker.Api.Database.DatabaseModels.BookingSession", "BookingSession")
                        .WithOne("Tenant")
                        .HasForeignKey("LaundryBooker.Api.Database.DatabaseModels.Tenant", "BookingSessionId");
                });
#pragma warning restore 612, 618
        }
    }
}
